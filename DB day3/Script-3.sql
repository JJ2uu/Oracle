-- 테이블 복사

CREATE TABLE HR.member5
AS SELECT * FROM MEMBER4

INSERT INTO hr.MEMBER5
VALUES ('banana3', 'banana3', 'banana3', 'banana3', sysdate) -- 현재 입력한 날짜

SELECT * FROM HR.MEMBER5

INSERT INTO HR.MEMBER5
VALUES ('banana4', 'banana4', 'banana4', 'banana4', sysdate, 'aaa') -- 디폴트값 활용

INSERT INTO HR.BBS2
VALUES (bbs_id_seq.nextval, 'happy', 'happy day', 'ice')

INSERT INTO HR.BBS2
VALUES (bbs_id_seq.nextval, 'happy2', 'happy day2', 'ice')

SELECT * FROM BBS2

CREATE SEQUENCE pd_id_seq INCREMENT BY 1 START WITH 1

CREATE TABLE HR.PRODUCT2 (
	ID NUMBER(38,0),
	NAME varchar2(100)
)

INSERT INTO HR.PRODUCT2
VALUES (pd_id_seq.nextval, '홍길동')

SELECT * FROM product2

INSERT INTO HR.PRODUCT2
VALUES (pd_id_seq.nextval, '김길동')

CREATE TABLE HR.ORDERLIST2 (
	ID NUMBER(38,0),
	TITLE varchar2(100),
	PRICE number(38,0)
)

CREATE SEQUENCE or_seq INCREMENT BY 1 START WITH 1

INSERT INTO HR.ORDERLIST2
VALUES (or_seq.nextval, '아우터', 200000)

SELECT * FROM ORDERLIST2

SELECT * FROM ORDERLIST2 ORDER BY ID -- 오름차순

SELECT * FROM ORDERLIST2 ORDER BY ID DESC -- 내림차순

SELECT * FROM ORDERLIST2 WHERE id >= 3 ORDER BY id DESC

CREATE TABLE HR.DEPT (
	DEPTNO NUMBER(2),
	DNAME VARCHAR2(14 BYTE),
	LOC VARCHAR2(13 BYTE)
)

DROP TABLE DEPT

CREATE TABLE HR.EMP (
	EMPNO NUMBER(4),
	ENAME VARCHAR2(10 BYTE),
	JOB VARCHAR2(9 BYTE),
	MGR NUMBER(4),
	HIREDATE DATE,
	SAL NUMBER(7,2),
	COMM NUMBER(7,2),
	DEPTNO NUMBER(2)
)

CREATE TABLE HR.SALGRADE (
	GRADE NUMBER,
	LOSAL NUMBER,
	HISAL NUMBER
)

ALTER TABLE DEPT ADD (CONSTRAINT PK_DEPT PRIMARY KEY (DEPTNO));

ALTER TABLE EMP ADD (CONSTRAINT PK_EMP PRIMARY KEY (EMPNO));

ALTER TABLE EMP ADD (CONSTRAINT FK_DEPTNO FOREIGN KEY (DEPTNO) REFERENCES DEPT (DEPTNO));

SELECT * FROM EMP
ORDER BY sal DESC

SELECT * FROM EMP
WHERE deptno = 30
ORDER BY empno DESC

SELECT * FROM EMP
WHERE NOT deptno = 30
ORDER BY empno DESC

SELECT deptno FROM emp

SELECT DISTINCT deptno FROM emp

SELECT ename, sal * 12 AS yearSAL FROM emp

SELECT * FROM emp WHERE deptno = 30 AND job = 'SALESMAN'

SELECT * FROM emp WHERE deptno = 30 or job = 'SALESMAN'

SELECT * FROM emp WHERE sal >= 3000

SELECT * FROM emp WHERE sal != 3000

SELECT * FROM emp WHERE job IN ('SALESMAN', 'MANAGER') ORDER BY job

SELECT * FROM emp WHERE job NOT IN ('SALESMAN', 'MANAGER') ORDER BY job

SELECT * FROM emp WHERE sal BETWEEN 2000 AND 3000 ORDER BY EMPNO 

SELECT * FROM emp WHERE sal NOT BETWEEN 2000 AND 3000 ORDER BY EMPNO

SELECT * FROM emp WHERE ENAME LIKE '_L%'

SELECT * FROM emp WHERE ENAME NOT LIKE '_L%'

SELECT * FROM EMP
WHERE COMM IS NULL

SELECT * FROM EMP
WHERE COMM IS NOT NULL

CREATE TABLE detp_temp2
AS SELECT * FROM DEPT

DROP TABLE DETP_TEMP2

CREATE TABLE HR.DEPT_temp2
AS SELECT * FROM DEPT

UPDATE DEPT_TEMP2 SET loc = 'SEOUL';

SELECT * FROM DEPT_TEMP2

UPDATE DEPT_TEMP2 SET DNAME = 'DATABASE', loc = 'BUSAN'
WHERE DEPTNO = 40

DELETE FROM DEPT_TEMP2
WHERE DNAME = 'SALES'

UPDATE DEPT_TEMP2 SET loc = 'JAPAN' WHERE DEPTNO = 20

CREATE TABLE "HR"."PRODUCT3"(
	"ID" VARCHAR2(200), 
	"NAME" VARCHAR2(200), 
	"CONTENT" VARCHAR2(200), 
	"PRICE" number(38,0),
	"COMPANY2" VARCHAR2(200),
	"IMG" VARCHAR2(200)
)

CREATE TABLE "HR"."PRODUCT4"(
	"ID" VARCHAR2(200), 
	"NAME" VARCHAR2(200), 
	"CONTENT" VARCHAR2(200), 
	"PRICE" number(38,0),
	"COMPANY" VARCHAR2(200),
	"IMG" VARCHAR2(200)
)

-- 1. price로 내림차순 정렬하여 전체컬럼 검색
SELECT * FROM PRODUCT4 ORDER BY price DESC

-- 2. company로 오름차순 정렬하여 제품의 이름, 내용, 가격 검색
SELECT NAME, CONTENT, PRICE FROM product4 ORDER BY company

-- 3. company의 목록을 검색(중복제거)
SELECT DISTINCT company FROM PRODUCT4

-- 4. price가 5000인 제품명과 회사명
SELECT name, company FROM PRODUCT4 WHERE PRICE = 5000

-- 5. 각 신발을 5개씩 주문했을 때의 가격을 price5라고 항목명을 지정하여 출력
SELECT PRICE * 5 AS PRICE5 FROM PRODUCT4

-- 6. price가 5000인 제품명과 회사명
SELECT NAME, COMPANY FROM PRODUCT4 WHERE price = 5000

-- 7. price가 3000와 6000사이인 제품명과 가격, 회사명 검색
SELECT NAME, PRICE, COMPANY FROM PRODUCT4 WHERE PRICE BETWEEN 3000 AND 6000

-- 8. 회사명이 c100이 아닌 회사명과 제품명
SELECT COMPANY, NAME FROM PRODUCT4 WHERE COMPANY NOT IN ('c100')

-- 9. 회사명이 c100, c200인 제품명과 가격
SELECT NAME, PRICE FROM PRODUCT4 WHERE COMPANY = 'c100' OR COMPANY = 'c200'

-- 10. 제품명에 4로 끝나는 제품의 전체 정보 검색
SELECT * FROM PRODUCT4 WHERE NAME LIKE '%4';

-- 11. 제품내용에 food를 포함하는 제품의 전체 정보 검색
SELECT * FROM PRODUCT4 WHERE CONTENT LIKE '%food%';

-- 12. price가 5000원인 제품의 content를 품절로 수정
UPDATE PRODUCT4 SET CONTENT = 'Sold out' WHERE price = 5000

-- 13. id가 100, 102번 제품의 img를 o.png로, price를 10000으로 수정
UPDATE PRODUCT4 SET img = 'o,png', price = 10000 WHERE id = '100' OR id = '102'

-- 14. 회사명이 c100인 경우 모든 정보 삭제
DELETE FROM PRODUCT4 WHERE COMPANY = 'c100'

-- 13. 테이블의 모든 정보 삭제
DELETE FROM PRODUCT4